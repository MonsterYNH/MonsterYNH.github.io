{"version":3,"sources":["static/wechat.jpg","static/qq.jpg","static/monsterlogo.png","util/request.js","blog/assembly/banner/banner.js","blog/assembly/user/userAvatar.js","util/time.js","blog/assembly/article/article.js","blog/common.js","blog/home/home.js","blog/article/article.js","blog/assembly/editor/editor.js","blog/user/center.js","blog/user/userFollowList.js","blog/user/article.js","blog/assembly/article/reply.js","blog/assembly/article/comment.js","blog/article/articleDetail.js","blog/assembly/message/message.js","blog/assembly/user/Signin.js","blog/assembly/user/userInfo.js","blog/index/error.js","blog/index/index.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","axios","defaults","headers","common","timeout","interceptors","request","use","config","localStorage","getItem","error","Promise","reject","response","status","data","code","token","setItem","message","RequestUtil","path","resolve","get","params","then","res","catch","err","post","put","delete","Banner","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getBannerData","GET","setState","bannerData","state","Item","map","item","index","react_default","a","createElement","style","display","justifyContent","key","object_id","alt","width","height","src","link","carousel","autoplay","Component","UserAvatar","getUserInfo","concat","user_id","userInfo","user_avatar","avatar","onOptionBarClick","type","follow_status","PUT","id","option","removeItem","window","location","reload","placement","optionBar","Link","to","pathname","query","name","es_button","onClick","bind","popover","autoAdjustOverflow","content","card","bordered","paddingBottom","size","icon","paddingLeft","sex","signture","followed_user_num","user_followed_num","trigger","onMouseEnter","moment","locale","months","split","monthsShort","weekdays","weekdaysShort","weekdaysMin","longDateFormat","LT","LTS","L","LL","LLL","LLLL","l","ll","lll","llll","meridiemParse","meridiemHour","hour","meridiem","minute","isLower","hm","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","dayOfMonthOrdinalParse","ordinal","number","period","relativeTime","future","past","s","ss","m","mm","h","hh","d","dd","M","MM","y","yy","week","dow","doy","Meta","ArticleList","getData","callback","start","limit","sort","tags","onLoadMore","list","toConsumableArray","Array","loading","datas","total","dispatchEvent","Event","onAvatarMouseEnter","onClickArticleAction","POST","kind","like_users_num","num","like_status","collect_users_num","collect_status","onClickCommentIcon","commentListStatus","pos","indexOf","splice","push","setCommentNum","comment_num","initLoading","_this2","_this3","_this$state","loadMore","textAlign","marginTop","lineHeight","es_list","className","itemLayout","dataSource","renderItem","skeleton","title","active","description","isArray","images","length","textIndent","paddingRight","marginRight","color","userAvatar_UserAvatar","create_user","create_user_avatar","read_num","unix","update_time","ListContent","linkPath","TagContent","tag","es_tag","Paragraph","Home","newArticleData","recommendArticleData","row","col","span","paddingTop","banner_Banner","twoToneColor","theme","article_ArticleList","actions","wechat","qq","copyable","position","bottom","CheckableTag","Article","onClickSort","hotArticleData","selectedTags","articleKey","checked","nextSelectedTags","filter","t","menu","mode","onSelect","onArticleTypeChange","selectedKeys","articleType","onChange","selectTag","Editor","context","editorContent","elem","refs","editorElem","editor","E","setImages","customConfig","menus","onchange","html","onContentChange","uploadImgServer","uploadImgHooks","success","xhr","result","console","log","errno","uploadFileName","debug","create","alert","ref","clickHandle","UserCenter","onClickCreateArticle","createArticle","onTitleChange","onDescriptionChange","onCategoryChange","category","selectedCategory","nextSelectedCategories","onTagsChange","saveInputRef","input","handleInputChange","e","inputValue","target","value","handleInputConfirm","categories","tagInputVisible","categoryInputVisible","showInput","focus","submitArticle","_this$state2","categoryVisible","match","forEach","defaultSelectedKeys","selectMenu","children","center_Paragraph","strong","modal","visible","onOk","onCancel","editable","center_CheckableTag","onBlur","onPressEnter","background","borderStyle","dangerouslySetInnerHTML","__html","editor_Editor","withRouter","TabPane","tabs","UserFollow","getFollowedData","followedStart","followedData","followedTotal","followingStart","followingData","onFollowTabs","followingTotal","center","defaultActiveKey","tab","UserFollowList","ArticleEntry","Replies","getCommentReplies","comment_id","onCommentReplyPageChange","page","onArticleCommentReplyClick","comment_user","article_comment_reply_content","onArticleCommentReplyChange","pagination","header","footer","addonAfter","to_user","to_user_avatar","user","create_time","fromNow","Comments","getComments","article_id","onCommentPageChange","onArticleCommentClick","article_comment_content","onArticleCommentChange","onClickCommentAction","replyNum","create_user_name","reply_Replies","ArticleDetail","onClickLike","detailData","sameArticleData","tagData","typography","Title","level","Text","comment_Comments","Message","componentDidMount","getLeaveMessageList","handleChange","onClickSelectAvatar","messagerAvatar","defaultAvatar","onClickLeaveMessageButton","submitting","messagerName","commentLeaveMessage","messageId","message_id","onClickReply","LeaveMessageEntry","message_LeaveMessage","comments","entry","closable","LeaveMessage","_ref","comment","author","datetime","Grid","message_Editor","onSubmit","TextArea","_ref2","es_form","rows","htmlType","LoginForm","_Component","_class","apply","arguments","inherits","createClass","_this$props","onCreate","getFieldDecorator","form","okText","layout","label","rules","required","UserLogin","showModal","handleCancel","handleCreate","formRef","validateFields","values","login","account","password","resetFields","saveFormRef","getUserLoginStatus","isLogin","loginStatus","wrappedComponentRef","UserInfo","handleAvatarClick","handleMessageClick","handleUserMenuClick","handleUserLogout","getUserMessageList","userMessage","userMessageTotal","handleMessageRead","onUserMessageMouseEnter","onReadAllButtonClick","setLoginStatus","userMessageDropDownItem","from_user_id","from_user_avatar","time","format","fontSize","dropdown","overlay","badge","count","Signin_UserLogin","ErrorPage","empty","image","imageStyle","Header","Content","Footer","Index","HomeEntry","pathSnippets","i","breadcrumbItems","breadcrumb","extraBreadcrumbItems","url","slice","join","affix","logo","userInfo_UserInfo","Switch","Route","exact","component","article_Article","assign","Redirect","strict","from","back_top","Boolean","hostname","ReactDOM","render","BrowserRouter","index_Index","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.36196281.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wechat.16f3d03f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/qq.8340ff3f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/monsterlogo.6e99af67.png\";","import axios from \"axios\"\r\nimport { message } from 'antd';\r\n\r\naxios.defaults.headers.common[\"content-type\"] = \"application/json\"\r\naxios.defaults.timeout = 1000 * 60\r\n\r\n// 请求中间件\r\naxios.interceptors.request.use(function (config) {\r\n    // Do something with response data\r\n    config.headers[\"authorization\"] = localStorage.getItem('user_token')\r\n    return config;\r\n  }, function (error) {\r\n    // Do something with request error\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// 响应中间件\r\naxios.interceptors.response.use(function (response) {\r\n    // Do something with response data\r\n    if (response.status >= 200 && response.status < 300) {\r\n        if (response.data && response.data.code === 0) {\r\n            if (response.data && response.data.token) {\r\n                localStorage.setItem('user_token', response.data.token);\r\n            }\r\n        } else if (response.data && response.data.code > 0) {\r\n            message.error(response.data && response.data.message ? response.data.message : \"Unknow err\");\r\n        }\r\n        return response.data;\r\n    }\r\n        return response;\r\n    }, function (error) {\r\n        // Do something with response error\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// 请求工具\r\nexport default class RequestUtil {\r\n    static GET(path , data) {\r\n        return new Promise((resolve, reject) => {\r\n            axios.get(path, {\r\n                params: data\r\n            })\r\n            .then((res) => {\r\n                resolve(res)\r\n            })\r\n            .catch((err => {\r\n                reject(err)\r\n            }))\r\n        })\r\n    }\r\n    static POST(path, data) {\r\n        return new Promise((resolve, reject) => {\r\n            axios.post(path, data)\r\n            .then((res) => {\r\n                resolve(res)\r\n            })\r\n            .catch((err) => {\r\n                reject(err)\r\n            })\r\n        })\r\n    }\r\n    static PUT(path, data) {\r\n        return new Promise((resolve, reject) => {\r\n            axios.put(path, data)\r\n            .then((res) => {\r\n                resolve(res)\r\n            })\r\n            .catch((err) => {\r\n                reject(err)\r\n            })\r\n        })\r\n    }\r\n    static DELETE(path, data) {\r\n        return new Promise((resolve, reject) => {\r\n            axios.delete(path, {\r\n                params: data\r\n            })\r\n            .then((res) => {\r\n                resolve(res)\r\n            })\r\n            .catch((err => {\r\n                reject(err)\r\n            }))\r\n        })\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Carousel } from 'antd';\r\nimport './banner.less'\r\nimport RequestUtil from '../../../util/request'\r\n\r\nexport default class Banner extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            bannerData: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getBannerData()\r\n    }\r\n\r\n    getBannerData = () => {\r\n        RequestUtil.GET(\"/api/common/banner/list\")\r\n        .then(res => {\r\n            if (res.code === 0) {\r\n                this.setState({\r\n                    bannerData: res.data\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let images = this.state.bannerData\r\n        let Item = images.map((item,index) => (\r\n\t        <div style={{ display:'flex', justifyContent:'center' }} key={item.object_id}><img alt=\"test\" width=\"100%\" height=\"auto\" src={item.link} key={item.object_id}/></div>\r\n\t    ))\r\n        return (\r\n            <Carousel autoplay>\r\n                {Item}\r\n            </Carousel>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Avatar, Card, Popover, Button, Icon } from 'antd';\r\nimport { message } from 'antd';\r\nimport RequestUtil from '../../../util/request';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class UserAvatar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            type: this.props.type,\r\n            user_id: this.props.id,\r\n            user_avatar: this.props.avatar,\r\n            placement: this.props.placement,\r\n            userInfo: {}\r\n        }\r\n    }\r\n\r\n    getUserInfo = () => {\r\n        RequestUtil.GET(`/api/user/info/${this.state.user_id}`)\r\n        .then(res => {\r\n            if (res.code === 0) {\r\n                this.setState({\r\n                    userInfo: res.data,\r\n                    user_avatar: res.data.avatar,\r\n                })\r\n            }\r\n            \r\n        })\r\n    }\r\n\r\n    onOptionBarClick = (type) => {\r\n        switch (type) {\r\n            case \"follow\": {\r\n                let follow_status\r\n                switch (this.state.userInfo.follow_status) {\r\n                    case \"follow\": {\r\n                        follow_status = \"unfollow\"\r\n                        break\r\n                    }\r\n                    case \"unfollow\": {\r\n                        follow_status = \"follow\"\r\n                        break\r\n                    }\r\n                    case \"each\": {\r\n                        follow_status = \"unfollow\"\r\n                        break\r\n                    }\r\n                    default: {\r\n                        follow_status = \"follow\"\r\n                    }\r\n                }\r\n                RequestUtil.PUT(`/api/user/follow/${this.state.userInfo.id}`, {\r\n                    option: follow_status\r\n                })\r\n                .then(res => {\r\n                    if (res.code === 0) {\r\n                        this.getUserInfo()\r\n                    }\r\n                })\r\n                break\r\n            }\r\n            case \"logout\": {\r\n                localStorage.removeItem(\"user_token\")\r\n                window.location.reload()\r\n                break\r\n            }\r\n            default: {\r\n                message.error(\"暂不支持该功能，敬请期待\")\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let optionBar = null\r\n        let follow_status\r\n        switch (this.state.userInfo.follow_status) {\r\n            case \"follow\": {\r\n                follow_status = \"已关注\"\r\n                break\r\n            }\r\n            case \"unfollow\": {\r\n                follow_status = \"关注\"\r\n                break\r\n            }\r\n            case \"each\": {\r\n                follow_status = \"互相关注\"\r\n                break\r\n            }\r\n            default: {\r\n                follow_status = \"关注\"\r\n            }\r\n        }\r\n        switch (this.state.type) {\r\n            case \"self\": {\r\n                optionBar = \r\n                <div>  \r\n                    <Link to={{pathname: `/center/article/${this.state.user_id}`, query:{name: \"用户中心\"}}}><Button>主页</Button></Link> \r\n                    <Button onClick={this.onOptionBarClick.bind(this, \"logout\")}>注销</Button>\r\n                </div>\r\n                break\r\n            }\r\n            default: {\r\n                optionBar = \r\n                <div>   \r\n                    <Link to={{pathname: `/center/article/${this.state.user_id}`, query:{name: \"用户中心\"}}}><Button>主页</Button></Link> \r\n                    <Button onClick={this.onOptionBarClick.bind(this, \"follow\")}>{follow_status}</Button>\r\n                </div>\r\n            }\r\n        }\r\n        return (\r\n            <Popover \r\n                autoAdjustOverflow\r\n                placement={this.state.placement ? this.state.placement : \"bottom\"}\r\n                content={\r\n                    <Card bordered={false}>\r\n                        <div>\r\n                            <div style={{display:\"flex\", paddingBottom:\"1rem\"}}>\r\n                                <Avatar size=\"large\" icon=\"user\" src={this.state.userInfo.avatar} />\r\n                                <div style={{paddingLeft:\"1rem\"}}>{this.state.userInfo.name}{this.state.userInfo.sex === 1 ? <Icon type=\"man\" /> : <Icon type=\"woman\" />}</div>\r\n                            </div>\r\n                            <div>\r\n                                <p>{this.state.userInfo.signture || \"这个人很懒...\"}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{display:\"flex\", justifyContent:\"center\", paddingBottom:\"1rem\"}}>\r\n                            关注: {this.state.userInfo.followed_user_num || 0}  粉丝: {this.state.userInfo.user_followed_num || 0}\r\n                        </div>\r\n                        {optionBar}\r\n                    </Card>\r\n                } \r\n                trigger=\"hover\"\r\n            >\r\n                <Link to={`/center/article/${this.state.user_id}`}>\r\n                    <Avatar \r\n                        onMouseEnter={this.getUserInfo}\r\n                        icon=\"user\" src={this.state.user_avatar} \r\n                        size=\"small\"\r\n                    />\r\n                </Link>\r\n            </Popover>\r\n        )\r\n    }\r\n}","import moment from 'moment'\r\n// 里面的字符可以根据自己的需要进行调整\r\nmoment.locale('zh-cn', {\r\n    months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\r\n    monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\r\n    weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\r\n    weekdaysShort: '周日_周一_周二_周三_周四_周五_周六'.split('_'),\r\n    weekdaysMin: '日_一_二_三_四_五_六'.split('_'),\r\n    longDateFormat: {\r\n        LT: 'HH:mm',\r\n        LTS: 'HH:mm:ss',\r\n        L: 'YYYY-MM-DD',\r\n        LL: 'YYYY年MM月DD日',\r\n        LLL: 'YYYY年MM月DD日Ah点mm分',\r\n        LLLL: 'YYYY年MM月DD日ddddAh点mm分',\r\n        l: 'YYYY-M-D',\r\n        ll: 'YYYY年M月D日',\r\n        lll: 'YYYY年M月D日 HH:mm',\r\n        llll: 'YYYY年M月D日dddd HH:mm'\r\n    },\r\n    meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\r\n    meridiemHour: function (hour, meridiem) {\r\n        if (hour === 12) {\r\n            hour = 0;\r\n        }\r\n        if (meridiem === '凌晨' || meridiem === '早上' ||\r\n            meridiem === '上午') {\r\n            return hour;\r\n        } else if (meridiem === '下午' || meridiem === '晚上') {\r\n            return hour + 12;\r\n        } else {\r\n            // '中午'\r\n            return hour >= 11 ? hour : hour + 12;\r\n        }\r\n    },\r\n    meridiem: function (hour, minute, isLower) {\r\n        const hm = hour * 100 + minute;\r\n        if (hm < 600) {\r\n            return '凌晨';\r\n        } else if (hm < 900) {\r\n            return '早上';\r\n        } else if (hm < 1130) {\r\n            return '上午';\r\n        } else if (hm < 1230) {\r\n            return '中午';\r\n        } else if (hm < 1800) {\r\n            return '下午';\r\n        } else {\r\n            return '晚上';\r\n        }\r\n    },\r\n    calendar: {\r\n        sameDay: '[今天]LT',\r\n        nextDay: '[明天]LT',\r\n        nextWeek: '[下]ddddLT',\r\n        lastDay: '[昨天]LT',\r\n        lastWeek: '[上]ddddLT',\r\n        sameElse: 'L'\r\n    },\r\n    dayOfMonthOrdinalParse: /\\d{1,2}(日|月|周)/,\r\n    ordinal: function (number, period) {\r\n        switch (period) {\r\n            case 'd':\r\n            case 'D':\r\n            case 'DDD':\r\n                return number + '日';\r\n            case 'M':\r\n                return number + '月';\r\n            case 'w':\r\n            case 'W':\r\n                return number + '周';\r\n            default:\r\n                return number;\r\n        }\r\n    },\r\n    relativeTime: {\r\n        future: '%s内',\r\n        past: '%s前',\r\n        s: '几秒',\r\n        ss: '%d秒',\r\n        m: '1分钟',\r\n        mm: '%d分钟',\r\n        h: '1小时',\r\n        hh: '%d小时',\r\n        d: '1天',\r\n        dd: '%d天',\r\n        M: '1个月',\r\n        MM: '%d个月',\r\n        y: '1年',\r\n        yy: '%d年'\r\n    },\r\n    week: {\r\n        // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效\r\n        dow: 1, // Monday is the first day of the week.\r\n        doy: 4  // The week that contains Jan 4th is the first week of the year.\r\n    }\r\n})\r\n\r\nexport default moment","import React, { Component } from 'react';\r\nimport { List, Button, Skeleton, Icon, Card } from 'antd';\r\nimport RequestUtil from '../../../util/request'\r\nimport { Link } from 'react-router-dom';\r\nimport UserAvatar from '../user/userAvatar'\r\nimport moment from '../../../util/time';\r\nconst { Meta } = Card;\r\nmoment.locale('zh-cn')\r\n\r\nexport default class ArticleList extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            // 分页 请求数据\r\n            start: 1,\r\n            limit: 10,\r\n            total: 0,\r\n            type: props.type,\r\n            sort: props.sort,\r\n            tags: props.tags,\r\n            user_id: props.user_id,\r\n            // 加载文章数据\r\n            initLoading: false,\r\n            loading: false,\r\n            data: [],\r\n            list: [],\r\n            // 用户信息\r\n            userInfo: {},\r\n            commentListStatus:[],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { start } = this.state\r\n        this.getData(data => {\r\n            this.setState({\r\n                initLoading: false,\r\n                data: data.data,\r\n                list: data.data,\r\n                start: start + 1,\r\n                total: data.total\r\n            })\r\n        })\r\n    }\r\n\r\n    getData = (callback) => {\r\n        RequestUtil.GET(\"/api/article/type\", {\r\n            start: this.state.start,\r\n            limit: this.state.limit,\r\n            type: this.state.type,\r\n            sort: this.state.sort,\r\n            tags: this.state.tags,\r\n            user_id: this.state.user_id\r\n        })\r\n        .then(res => {\r\n            if (res.code === 0) {\r\n                callback(res.data)\r\n            }\r\n        })\r\n    }\r\n\r\n    onLoadMore = () => {\r\n        const list = this.state.data.concat([...new Array(3)].map(() => ({loading: true, name: {}})))\r\n        this.setState({\r\n            loading: true,\r\n            list: list\r\n        })\r\n        this.getData(datas => {\r\n            const data = this.state.data.concat(datas.data)\r\n            let { start } = this.state\r\n            this.setState({\r\n                data,\r\n                list: data,\r\n                loading: false,\r\n                start: start + 1,\r\n                total: data.total\r\n            }, () => {\r\n                window.dispatchEvent(new Event('resize'))\r\n            })\r\n        })\r\n    }\r\n\r\n    onAvatarMouseEnter = (id) => {\r\n        RequestUtil.GET(`/api/user/info/${id}`)\r\n        .then(res => {\r\n            this.setState({\r\n                userInfo: res.data\r\n            })\r\n        })\r\n    }\r\n\r\n    onClickArticleAction = (type, id, status, index) => {\r\n        switch (type) {\r\n            case \"like-o\": {\r\n                RequestUtil.POST(`/api/community/option/${id}`, {\r\n                    kind: \"article\",\r\n                    type: \"like\",\r\n                    option: status >= 0 ? -1 : 1\r\n                })\r\n                .then(res => {\r\n                    if (res.code === 0) {\r\n                        let list = this.state.list\r\n                        list[index].like_users_num = res.data.num\r\n                        list[index].like_status = res.data.status\r\n                        this.setState({\r\n                            list: list\r\n                        })\r\n                    }\r\n                })\r\n                break\r\n            }\r\n            case \"star-o\": {\r\n                RequestUtil.POST(`/api/community/option/${id}`, {\r\n                    kind: \"article\",\r\n                    type: \"collect\",\r\n                    option: status >= 0 ? -1 : 1\r\n                })\r\n                .then(res => {\r\n                    if (res.code === 0) {\r\n                        let list = this.state.list\r\n                        list[index].collect_users_num = res.data.num\r\n                        list[index].collect_status = res.data.status\r\n                        this.setState({\r\n                            list: list\r\n                        })\r\n                    }\r\n                })\r\n                break\r\n            }\r\n            default: {}\r\n        }\r\n    }\r\n\r\n    onClickCommentIcon = (index) => {\r\n        let status = this.state.commentListStatus\r\n        let pos = status.indexOf(index)\r\n        if (pos >= 0) {\r\n            status.splice(pos, 1)\r\n        } else {\r\n            status.push(index)\r\n        }\r\n        this.setState({\r\n            commentListStatus: status\r\n        })\r\n    }\r\n\r\n    setCommentNum = (num, index) => {\r\n        let data = this.state.data\r\n        data[index].comment_num = num\r\n        this.setState({\r\n            data: data\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { initLoading, list, start, limit, total } = this.state\r\n        const loadMore = (start-1) * limit < total ? (\r\n            <div style={{textAlign: 'center', marginTop: 12, height: 32, lineHeight: '32px'}}>\r\n                <Button onClick={this.onLoadMore}>加载更多</Button>\r\n            </div>\r\n        ) : (\r\n            <div style={{textAlign: 'center', marginTop: 12, height: 32, lineHeight: '32px'}}>\r\n                <span>我是有底线的</span>\r\n            </div>\r\n        )\r\n        return (\r\n            <List\r\n                size=\"middle\"\r\n                className=\"article-list\"\r\n                loading={initLoading}\r\n                itemLayout=\"horizontal\"\r\n                loadMore={loadMore}\r\n                dataSource={list}\r\n                split={false}\r\n                renderItem={(item, index) => (\r\n                    <List.Item key={item.id}>\r\n                        <Skeleton title={false} loading={item.loading} active>\r\n                            <div style={{width: \"100%\"}}>\r\n                            <Card>\r\n                                <Meta \r\n                                    title={\r\n                                        <div style={{display:\"flex\", justifyContent:\"space-between\"}}>\r\n                                            <div>\r\n                                                <Link to={{pathname: `/article/detail/${item.id}`, query: {name: item.title}}}>{item.title}</Link>\r\n                                            </div>\r\n                                        </div>}\r\n                                    description={\r\n                                        <div style={{display: \"flex\", height: \"100px\"}}>\r\n                                            <div style={{width: Array.isArray(item.images) && item.images.length > 0 ? \"70%\" : \"100%\", height: \"auto\"}}>\r\n                                                <div style={{textIndent:\"2rem\", height: \"80%\"}}>{item.description || \"暂无\"}</div>\r\n                                                <div>\r\n                                                    <span style={{paddingRight:\"1rem\"}}>\r\n                                                        <Icon \r\n                                                            onClick={this.onClickArticleAction.bind(this, \"like-o\", item.id, item.like_status, index)} \r\n                                                            type=\"like-o\" \r\n                                                            style={{ marginRight: 8, color: item.like_status >= 0 ? \"red\" : \"\" }} \r\n                                                        />\r\n                                                        {item.like_users_num}\r\n                                                    </span>\r\n                                                    <span style={{paddingRight:\"1rem\"}}>\r\n                                                        <Icon onClick={this.onClickCommentIcon.bind(this, index)} type=\"message\" style={{ marginRight: 8 }} />\r\n                                                        {item.comment_num}\r\n                                                    </span>\r\n                                                    <span style={{paddingRight:\"1rem\"}} >\r\n                                                        <UserAvatar id={item.create_user} avatar={item.create_user_avatar} />\r\n                                                    </span>\r\n                                                    <span style={{paddingRight:\"1rem\"}} >\r\n                                                        <Icon type=\"eye\" style={{ marginRight: 8 }}/>\r\n                                                        {item.read_num}\r\n                                                    </span>\r\n                                                    <span>\r\n                                                        <Icon type=\"clock-circle\" style={{ marginRight: 8 }}/>\r\n                                                        {moment.unix(item.update_time).calendar()}\r\n                                                    </span>\r\n                                                    {/* {this.state.commentListStatus.indexOf(index) >= 0 ? <Comment index={index} setCommentNum={this.setCommentNum.bind(this)} object_id={item.id}/> : null} */}\r\n                                                </div>\r\n                                            </div>\r\n                                            {}\r\n                                            <div style={{width: Array.isArray(item.images) && item.images.length > 0 ? \"30%\" : \"0px\"}}>{Array.isArray(item.images) && item.images.length > 0 ? <img width=\"100%\" height=\"auto\" alt=\"item\" src={item.images[0]}/> : null}</div>\r\n                                        </div>\r\n                                    }\r\n                                />\r\n                            </Card>\r\n                            </div>\r\n                            \r\n                        </Skeleton>\r\n                    </List.Item>\r\n                )}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\n","import { Card, Tag } from 'antd';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport function ListContent(props) {\r\n    const { title, data, linkPath } = props\r\n    return (\r\n        <Card>\r\n            <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n                <p>{title}</p>\r\n                <Link to={linkPath}>更多</Link>\r\n            </div>\r\n            <div>\r\n                {data.map((item, index) => \r\n                    <Link to={{pathname: `/article/detail/${item.id}`, query: {name: title}}} key={index}>\r\n                        <p>{item.title}</p> \r\n                    </Link>\r\n                )}\r\n            </div>\r\n           \r\n        </Card>\r\n    )\r\n}\r\n\r\nexport function TagContent(props) {\r\n    const { title, data } = props\r\n    return (\r\n        <Card style={{display: \"flex\"}}>\r\n            <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n                <p>{title}</p>\r\n            </div>\r\n            {data.map((item, index) => {\r\n                return <Link key={index} to={{pathname: \"/article/all\", query:{tag: item.tag}}}><Tag key={index}>{item.tag}({item.total})</Tag></Link>\r\n            })}\r\n        </Card>\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport { Row, Col, Card, Typography, Avatar, Icon, Popover } from 'antd';\r\nimport Banner from '../assembly/banner/banner'\r\nimport ArticleList from '../assembly/article/article'\r\nimport RequestUtil from '../../util/request';\r\nimport {ListContent, TagContent} from '../common'\r\nimport wechat from '../../static/wechat.jpg'\r\nimport qq from '../../static/qq.jpg'\r\nconst { Paragraph } = Typography;\r\n\r\n\r\n\r\nexport default class Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            newArticleData: [],\r\n            recommendArticleData: [],\r\n            tags: [],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        RequestUtil.GET(\"/api/article/type\", {\r\n            type: \"new\",\r\n            limit: 5,\r\n        })\r\n        .then(res => {\r\n            if (res.code === 0) {\r\n                this.setState({\r\n                    newArticleData: res.data.data\r\n                })\r\n            }\r\n        })\r\n        RequestUtil.GET(\"/api/article/type\", {\r\n            type: \"recommend\",\r\n            limit: 5,\r\n        })\r\n        .then(res => {\r\n            if (res.code === 0) {\r\n                this.setState({\r\n                    recommendArticleData: res.data.data\r\n                })\r\n            }\r\n        })\r\n        RequestUtil.GET(\"/api/article/tags\")\r\n        .then(res => {\r\n            if (res.code === 0) {\r\n                this.setState({\r\n                    tags: res.data\r\n                })\r\n            }\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <Row >\r\n                <Col span={17}>\r\n                    <div style={{paddingTop: \"1rem\"}}>\r\n                        <Banner/>\r\n                    </div>\r\n                    <div style={{paddingTop: \"1rem\"}}>\r\n                        <Card>\r\n                            <p><Icon type=\"fire\" twoToneColor=\"#eb2f96\" theme=\"twoTone\" />  博文</p>\r\n                            <ArticleList type=\"hot\"/>\r\n                        </Card>\r\n                    </div>\r\n                </Col>\r\n                <Col span={7}>\r\n                    <div style={{ paddingLeft:\"1rem\", paddingTop: \"1rem\" }}>\r\n                        <Card\r\n                            actions={[\r\n                                <Popover content={<img width=\"150px\" alt=\"wechat\" src={wechat}/>}>\r\n                                    <Icon type=\"wechat\" />\r\n                                </Popover>,\r\n                                <Popover content={<img width=\"150px\" alt=\"qq\" src={qq}/>}>\r\n                                    <Icon type=\"qq\" />\r\n                                </Popover>,\r\n                                <Popover content={<Paragraph copyable>ynhmonster@163.com</Paragraph>}>\r\n                                    <Icon type=\"mail\" />\r\n                                </Popover>,\r\n                            ]}\r\n                        >\r\n                            <div style={{display:\"flex\"}}>\r\n                                <span style={{position: \"relative\", bottom: \"0px\"}}>\r\n                                    <Avatar size=\"large\" icon=\"user\" src=\"http://img.52z.com/upload/news/image/20180212/20180212084623_32086.jpg\"/>\r\n                                </span>\r\n                                <div style={{paddingLeft: \"1rem\"}}>\r\n                                    <div style={{color: \"black\"}}>怪人怪性&</div>\r\n                                    <div>职业: 后端服务工程师</div>\r\n                                    <div>现居: 北京</div>\r\n                                </div>\r\n                            </div>\r\n                        </Card>\r\n                        <div style={{paddingTop: \"1rem\"}}>\r\n                            <ListContent data={this.state.newArticleData} title=\"最新文章\" linkPath=\"/article/new\"/>\r\n                        </div>\r\n                        <div style={{paddingTop: \"1rem\"}}>\r\n                            <ListContent data={this.state.recommendArticleData} title=\"推荐文章\" linkPath=\"/article/recommed\"/>\r\n                        </div>\r\n                        <div style={{paddingTop: \"1rem\"}}>\r\n                            <TagContent data={this.state.tags} title=\"标签\" />\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Row, Col, Card, Menu, Tag, Icon } from 'antd';\r\nimport ArticleList from '../assembly/article/article'\r\nimport { Link } from 'react-router-dom';\r\nimport RequestUtil from '../../util/request'\r\nimport {ListContent, TagContent} from '../common'\r\nconst CheckableTag = Tag.CheckableTag;\r\n\r\n\r\nexport default class Article extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            sort: -1,\r\n            hotArticleData: [],\r\n            newArticleData: [],\r\n            recommendArticleData: [],\r\n            tags: [],\r\n            selectedTags: [],\r\n            articleKey: 0,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const tag = this.props.location && this.props.location.query && this.props.location.query.tag ? this.props.location.query.tag : null\r\n        if (tag) {\r\n            let { selectedTags } = this.state\r\n            selectedTags.push(tag)\r\n            this.setState({\r\n                selectedTags\r\n            })\r\n        }\r\n        RequestUtil.GET(\"/api/article/type\", {\r\n            type: \"hot\",\r\n            limit: 5,\r\n        })\r\n        .then(res => {\r\n            if (res.code === 0) {\r\n                this.setState({\r\n                    hotArticleData: res.data.data\r\n                })\r\n            }\r\n        })\r\n        RequestUtil.GET(\"/api/article/type\", {\r\n            type: \"new\",\r\n            limit: 5,\r\n        })\r\n        .then(res => {\r\n            if (res.code === 0) {\r\n                this.setState({\r\n                    newArticleData: res.data.data\r\n                })\r\n            }\r\n        })\r\n        RequestUtil.GET(\"/api/article/type\", {\r\n            type: \"recommend\",\r\n            limit: 5,\r\n        })\r\n        .then(res => {\r\n            if (res.code === 0) {\r\n                this.setState({\r\n                    recommendArticleData: res.data.data\r\n                })\r\n            }\r\n        })\r\n        RequestUtil.GET(\"/api/article/tags\")\r\n        .then(res => {\r\n            if (res.code === 0) {\r\n                this.setState({\r\n                    tags: res.data\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    onClickSort = () => {\r\n        let sort = this.state.sort === 1 ? -1 : 1\r\n        this.setState({\r\n            sort: sort\r\n        })\r\n    }\r\n\r\n    selectTag(tag, checked) {\r\n        const { selectedTags, articleKey } = this.state;\r\n        const nextSelectedTags = checked\r\n          ? [...selectedTags, tag]\r\n          : selectedTags.filter(t => t !== tag);\r\n        this.setState({ selectedTags: nextSelectedTags, articleKey: articleKey + 1 });\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <Row >\r\n                <Col span={17}>\r\n                    <div style={{paddingTop: \"1rem\"}}>\r\n                        <Card>\r\n                            <Menu mode=\"horizontal\" onSelect={this.onArticleTypeChange} selectedKeys={[this.props.articleType]}>\r\n                                <Menu.Item key=\"hot\">\r\n                                    <Link to={{pathname: \"/article/hot\", query: {name: \"热门文章\"}}}>热门</Link>\r\n                                </Menu.Item>\r\n                                <Menu.Item key=\"new\">\r\n                                    <Link to={{pathname: \"/article/new\", query: {name: \"最新文章\"}}}>最新</Link>\r\n                                </Menu.Item>\r\n                                <Menu.Item key=\"recommend\">\r\n                                    <Link to={{pathname: \"/article/recommend\", query: {name: \"推荐文章\"}}}>推荐</Link>\r\n                                </Menu.Item>\r\n                                <Menu.Item key=\"all\">\r\n                                    <Link to={{pathname: \"/article/all\", query: {name: \"全部文章\"}}}>全部</Link>\r\n                                </Menu.Item>\r\n                            </Menu>\r\n                            {this.props.articleType === \"all\" ? \r\n                                <Card>\r\n                                    <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n                                        <p style={{color: \"black\"}}>标签</p>\r\n                                        <div onClick={this.onClickSort}><p><Icon type=\"filter\" />{this.state.sort === 1 ? \"倒序\" : \"正序\"}</p></div>\r\n                                        \r\n                                    </div>\r\n                                    <div>\r\n                                        {this.state.tags.map((item, index) => {\r\n                                            return (\r\n                                                <CheckableTag\r\n                                                    key={item.tag}\r\n                                                    checked={this.state.selectedTags.indexOf(item.tag) > -1}\r\n                                                    onChange={checked => this.selectTag(item.tag, checked)}\r\n                                                >\r\n                                                    {item.tag}\r\n                                                </CheckableTag>\r\n                                            )\r\n                                        })}\r\n                                    </div>\r\n                                </Card>\r\n                            : null}\r\n                            <ArticleList key={this.state.selectedTags + this.state.sort} type={this.props.articleType} sort={this.state.sort} tags={this.state.selectedTags} />\r\n                        </Card>\r\n                    </div>\r\n                </Col>\r\n                <Col span={7}>\r\n                    <div style={{ paddingLeft: \"1rem\"}}>\r\n                        {this.props.articleType !== \"hot\" ? <div style={{paddingTop: \"1rem\"}}><ListContent title=\"热门\" data={this.state.hotArticleData} linkPath=\"/article/hot\" /></div>: null}\r\n                        {this.props.articleType !== \"new\" ? <div style={{paddingTop: \"1rem\"}}><ListContent title=\"最新\" data={this.state.newArticleData} linkPath=\"/article/new\"/></div>: null}\r\n                        {this.props.articleType !== \"recommend\" ? <div style={{paddingTop: \"1rem\"}}><ListContent title=\"推荐\" data={this.state.recommendArticleData} linkPath=\"/article/recommend\"/></div>: null}\r\n                        <div style={{paddingTop: \"1rem\"}}>\r\n                            <TagContent title=\"标签\" data={this.state.tags} />\r\n                        </div>  \r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport E from 'wangeditor'\r\n\r\nexport default class Editor extends Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.state = {\r\n            editorContent: ''\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const elem = this.refs.editorElem\r\n        const editor = new E(elem)\r\n        const { setImages } = this.props\r\n        // 菜单配置\r\n        editor.customConfig.menus = [\r\n            'bold',  // 粗体\r\n            'fontSize',  // 字号\r\n            'fontName',  // 字体\r\n            'justify',  // 对齐方式\r\n            'quote',  // 引用\r\n            'link', // 链接\r\n            'emoticon',  // 表情\r\n            'image',  // 插入图片\r\n            'code',  // 插入代码\r\n            'undo',  // 撤销\r\n        ]\r\n        // 使用 onchange 函数监听内容的变化，并实时更新到 state 中\r\n        editor.customConfig.onchange = html => {\r\n            this.setState({\r\n                editorContent: html\r\n            })\r\n            this.props.onContentChange(html)\r\n        }\r\n        // 配置服务器端地址\r\n        editor.customConfig.uploadImgServer = 'http://localhost:5001/upload'\r\n        editor.customConfig.uploadImgHooks = {\r\n            success: function (xhr, editor, result) {\r\n                // 图片上传并返回结果，图片插入成功之后触发\r\n                // xhr 是 XMLHttpRequst 对象，editor 是编辑器对象，result 是服务器端返回的结果\r\n                console.log(result.data)\r\n                if (result.errno === 0) {\r\n                    setImages(result.data)\r\n                }\r\n            },\r\n        }\r\n        editor.customConfig.uploadFileName = 'file'\r\n        editor.customConfig.debug=true;\r\n        //editor.customConfig.uploadImgShowBase64 = true   // 使用 base64 保存图片\r\n        editor.create()\r\n    }\r\n    clickHandle() {\r\n        alert(this.state.editorContent)\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* <div style={{width: \"100%\"}} dangerouslySetInnerHTML={{__html: this.state.editorContent}} /> */}\r\n                {/* 将生成编辑器 */}\r\n                <div ref=\"editorElem\" style={{textAlign: 'left', width: \"100%\"}}/>\r\n                {this.props.debug ? <button onClick={this.clickHandle.bind(this)}>获取内容</button> : null}\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}","import React, { Component } from 'react';\r\nimport { Menu, Card, Row, Col, Avatar, Icon, Typography, message, Modal, Input, Tag, Button } from 'antd';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport Editor from '../assembly/editor/editor'\r\nimport RequestUtil from '../../util/request';\r\nconst { Paragraph } = Typography;\r\nconst CheckableTag = Tag.CheckableTag;\r\n\r\nclass UserCenter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userInfo: {},\r\n            createArticle: false,\r\n            title: \"\",\r\n            description: \"\",\r\n            content: \"\",\r\n            categories: [],\r\n            tags: [],\r\n            selectedTags: [],\r\n            selectedCategory: [],\r\n            tagInputVisible: false,\r\n            categoryVisible: false,\r\n            inputValue: '',\r\n            images: [],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        RequestUtil.GET(`/api/user/info/${this.props.match.params.id}`)\r\n        .then(res => {\r\n            if (res.code === 0) {\r\n                this.setState({\r\n                    userInfo: res.data\r\n                })\r\n            }\r\n        })\r\n        RequestUtil.GET(\"/api/article/tags\")\r\n        .then(res => {\r\n            console.log(res)\r\n            if (res.code === 0) {\r\n                let tags = []\r\n                res.data.forEach(item => {\r\n                    tags.push(item.tag)\r\n                })\r\n                this.setState({tags})\r\n            }\r\n        })\r\n        RequestUtil.GET(\"/api/article/categories\")\r\n        .then(res => {\r\n            if (res.code === 0) {\r\n                let categories = []\r\n                res.data.forEach(item => {\r\n                    categories.push(item.category)\r\n                })\r\n                this.setState({categories})\r\n            }\r\n        })\r\n    }\r\n\r\n    onClickCreateArticle = () => {\r\n        this.setState({\r\n            createArticle: !this.state.createArticle\r\n        })\r\n        \r\n    }\r\n\r\n    onClickCreateArticle = () => {\r\n        this.setState({\r\n            createArticle: !this.state.createArticle\r\n        })\r\n    }\r\n\r\n    onTitleChange = (title) => {\r\n        this.setState({title})\r\n    }\r\n\r\n    onDescriptionChange = (description) => {\r\n        this.setState({description})\r\n    }\r\n\r\n    onCategoryChange = (category, checked) => {\r\n        const { selectedCategory } = this.state;\r\n        const nextSelectedCategories = checked\r\n            ? [...selectedCategory, category]\r\n            : selectedCategory.filter(t => t !== category);\r\n        this.setState({ selectedCategory: nextSelectedCategories });\r\n    }\r\n\r\n    onTagsChange = (tag, checked) => {\r\n        const { selectedTags } = this.state;\r\n        const nextSelectedTags = checked\r\n            ? [...selectedTags, tag]\r\n            : selectedTags.filter(t => t !== tag);\r\n        this.setState({ selectedTags: nextSelectedTags });\r\n    }\r\n\r\n    onContentChange = (content) => {\r\n        this.setState({content})\r\n    }\r\n\r\n    saveInputRef = input => this.input = input\r\n\r\n    handleInputChange = (e) => {\r\n        this.setState({ inputValue: e.target.value });\r\n    }\r\n\r\n    handleInputConfirm = (kind) => {\r\n        const { inputValue } = this.state;\r\n        let { tags, categories } = this.state;\r\n        if (inputValue && tags.indexOf(inputValue) === -1 && kind === \"tag\") {\r\n            tags = [...tags, inputValue];\r\n        } else if (inputValue && tags.indexOf(inputValue) === -1 && kind === \"category\") {\r\n            categories = [...categories, inputValue]\r\n        }\r\n        if (kind === \"tag\") {\r\n            this.setState({\r\n                tags,\r\n                categories,\r\n                tagInputVisible: false,\r\n                inputValue: '',\r\n            });\r\n        } else if (kind === \"category\") {\r\n            this.setState({\r\n                tags,\r\n                categories,\r\n                categoryInputVisible: false,\r\n                inputValue: '',\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    showInput = (kind) => {\r\n        if (kind === \"tag\") {\r\n            this.setState({ tagInputVisible: true }, () => this.input.focus());\r\n        } else {\r\n            this.setState({ categoryInputVisible: true }, () => this.input.focus());\r\n        }\r\n        \r\n    }\r\n\r\n    submitArticle = () => {\r\n        const { title, description, selectedTags, selectedCategory, content } = this.state\r\n        if (title.length < 10) {\r\n            message.error('文章标题必须大于10个字');\r\n            return\r\n        }\r\n        if (description < 100) {\r\n            message.error('描述必须大于30个字');\r\n            return\r\n        }\r\n        if (selectedTags.length === 0) {\r\n            message.error('标签数必须大于1');\r\n            return\r\n        }\r\n        if (selectedCategory.length !== 1) {\r\n            message.error('分类数必须为1');\r\n            return\r\n        }\r\n        if (content.length < 100) {\r\n            message.error('内容必须大于100个字');\r\n            return\r\n        }\r\n        RequestUtil.POST(\"/api/article/create\", {\r\n            title: this.state.title,\r\n            description: this.state.description,\r\n            tags: this.state.selectedTags,\r\n            category: this.state.selectedCategory[0],\r\n            content: this.state.content,\r\n            images: this.state.images,\r\n        })\r\n        .then(res => {\r\n            if (res.code === 0) {\r\n                this.setState({\r\n                    createArticle: false\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    setImages = (images) => {\r\n        this.setState({\r\n            images\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Col span={17}>\r\n                        <div style={{paddingTop: \"1rem\"}}>\r\n                            <Menu mode=\"horizontal\" defaultSelectedKeys={[this.state.selectMenu]}>\r\n                                <Menu.Item key=\"article\"><Link to={`/center/article/${this.state.userInfo.id}`}>文章</Link></Menu.Item>\r\n                                <Menu.Item key=\"follow\"><Link to={`/center/follow/${this.state.userInfo.id}`}>关注</Link></Menu.Item>\r\n                            </Menu>\r\n                            <Card>\r\n                                {this.props.children}\r\n                            </Card>\r\n                        </div>\r\n                    </Col>\r\n                    <Col span={7}>\r\n                        <div className=\"user-setting\" style={{paddingTop: \"1rem\", paddingLeft: \"1rem\"}}>\r\n                            <Card\r\n                                actions={localStorage.getItem(\"id\") === this.state.userInfo.id ? [<span onClick={this.onClickCreateArticle}>写文章</span>, <span>编辑</span>] : null}\r\n                            >\r\n                                <div style={{display: \"flex\", justifyContent: \"center\"}}>\r\n                                    <Avatar size=\"large\" icon=\"user\" src={this.state.userInfo.avatar}/>\r\n                                </div>\r\n                                <div style={{display: \"flex\", justifyContent: \"center\"}}>\r\n                                    <Paragraph strong={true}>{this.state.userInfo.name} {this.state.userInfo.sex === 1 ? <Icon type=\"man\" /> : <Icon type=\"woman\" />}</Paragraph>\r\n                                </div>\r\n                                <div style={{display: \"flex\", justifyContent: \"center\"}}>\r\n                                    {this.state.userInfo.signture || \"这个人很懒...\"}\r\n                                </div>\r\n                                {/* <div style={{display: \"flex\", justifyContent: \"center\"}}>\r\n                                <span>年龄: {this.state.userInfo.age > 0 ? this.state.userInfo.age : \"暂未设置\"}</span>\r\n                                </div>\r\n                                <div style={{display: \"flex\", justifyContent: \"center\"}}>\r\n                                <span>城市: {this.state.userInfo.city && this.state.userInfo.city.length > 0 ? this.state.userInfo.city : \"暂未设置\"}</span>\r\n                                </div>\r\n                                <div style={{display: \"flex\", justifyContent: \"center\"}}>\r\n                                <span>国家: {this.state.userInfo.country && this.state.userInfo.country.length > 0 ? this.state.userInfo.country : \"暂未设置\"}</span>\r\n                                </div> */}\r\n                            </Card>\r\n                            <Modal\r\n                    title={<p style={{color: \"black\"}}>写文章</p>}\r\n                    visible={this.state.createArticle}\r\n                    onOk={this.submitArticle}\r\n                    onCancel={this.onClickCreateArticle}\r\n                    width=\"80%\"\r\n                >\r\n                    <div>\r\n                        <Card className=\"title\">\r\n                            <p style={{color: \"black\"}}>标题</p>\r\n                            <Paragraph editable={{ onChange: this.onTitleChange }}>{this.state.title}</Paragraph>\r\n                        </Card>\r\n                        <Card className=\"description\">\r\n                            <p style={{color: \"black\"}}>摘要</p>\r\n                            <Paragraph editable={{ onChange: this.onDescriptionChange }}>{this.state.description}</Paragraph>\r\n                        </Card>\r\n                        <Card className=\"category\">\r\n                            <p style={{color: \"black\"}}>分类</p>\r\n                            <div>\r\n                                {this.state.categories.map(category => {\r\n                                    return (\r\n                                        <CheckableTag\r\n                                            key={category}\r\n                                            checked={this.state.selectedCategory.indexOf(category) > -1}\r\n                                            onChange={checked => this.onCategoryChange(category, checked)}\r\n                                        >\r\n                                            {category}\r\n                                        </CheckableTag>\r\n                                    )\r\n                                })}\r\n                                {\r\n                                    this.state.categoryInputVisible ? (\r\n                                        <Input\r\n                                            ref={this.saveInputRef}\r\n                                            type=\"text\"\r\n                                            size=\"small\"\r\n                                            style={{ width: 78 }}\r\n                                            value={this.state.inputValue}\r\n                                            onChange={this.handleInputChange}\r\n                                            onBlur={this.handleInputConfirm.bind(this, \"category\")}\r\n                                            onPressEnter={this.handleInputConfirm.bind(this, \"category\")}\r\n                                        />\r\n                                    ) : (\r\n                                        <Tag\r\n                                            onClick={this.showInput.bind(this, \"category\")}\r\n                                            style={{ background: '#fff', borderStyle: 'dashed' }}\r\n                                        >\r\n                                            <Icon type=\"plus\" /> 新分类 \r\n                                        </Tag>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        </Card>\r\n                        <Card className=\"tag\">\r\n                            <p style={{color: \"black\"}}>标签</p>\r\n                            <div>\r\n                                {this.state.tags.map(tag => {\r\n                                    return (\r\n                                        <CheckableTag\r\n                                            key={tag}\r\n                                            checked={this.state.selectedTags.indexOf(tag) > -1}\r\n                                            onChange={checked => this.onTagsChange(tag, checked)}\r\n                                        >\r\n                                            {tag}\r\n                                        </CheckableTag>\r\n                                    )\r\n                                })}\r\n                                {\r\n                                    this.state.tagInputVisible ? (\r\n                                        <Input\r\n                                            ref={this.saveInputRef}\r\n                                            type=\"text\"\r\n                                            size=\"small\"\r\n                                            style={{ width: 78 }}\r\n                                            value={this.state.inputValue}\r\n                                            onChange={this.handleInputChange}\r\n                                            onBlur={this.handleInputConfirm.bind(this, \"tag\")}\r\n                                            onPressEnter={this.handleInputConfirm.bind(this, \"tag\")}\r\n                                        />\r\n                                    ) : (\r\n                                        <Tag\r\n                                            onClick={this.showInput.bind(this, \"tag\")}\r\n                                            style={{ background: '#fff', borderStyle: 'dashed' }}\r\n                                        >\r\n                                            <Icon type=\"plus\" /> 新标签 \r\n                                        </Tag>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        </Card>                \r\n                        <Card className=\"content\">\r\n                            <p>正文</p>\r\n                            <div style={{width: \"100%\"}} dangerouslySetInnerHTML={{__html: this.state.content}} />\r\n                        </Card>\r\n                        <Editor onContentChange={this.onContentChange} setImages={this.setImages}/>\r\n                        <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\r\n                            <Button onClick={this.submitArticle}>提交</Button>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(UserCenter)","import React, { Component } from 'react';\r\nimport { List } from 'antd';\r\nimport UserAvatar from '../assembly/user/userAvatar'\r\nimport RequestUtil from '../../util/request'\r\nimport { Tabs } from 'antd';\r\nimport UserEntry from '../user/center'\r\n\r\nconst TabPane = Tabs.TabPane;\r\n\r\nexport default class UserFollow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            kind: \"followed_user\",\r\n            followedStart: 1,\r\n            followingStart: 1,\r\n            limit: 10,\r\n            followedData: [],\r\n            followedTotal: 0,\r\n            followingData: [],\r\n            followingTotal: 0,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getFollowedData(this.state.followedStart, this.state.kind)\r\n    }\r\n\r\n    getFollowedData = (start, kind) => {\r\n        RequestUtil.GET(`/api/user/followed/${this.props.match.params.id}`, {\r\n            type: kind,\r\n            start: start,\r\n            limit: this.state.limit,\r\n        })\r\n        .then(res => {\r\n            if (res.code === 0) {\r\n                if (this.state.kind === \"followed_user\") {\r\n                    this.setState({\r\n                        followedStart: start,\r\n                        followedData: res.data.data,\r\n                        followedTotal: res.data.total,\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        followingStart: start,\r\n                        followingData: res.data.data,\r\n                        followedTotal: res.data.total,\r\n                    })\r\n                }\r\n                \r\n            }\r\n        })\r\n    }\r\n\r\n    onFollowTabs = (key) => {\r\n        let start = this.state.kind === \"user_followed\" ? this.state.followedStart : this.state.followingStart\r\n        this.getFollowedData(start, key)\r\n        this.setState({\r\n            kind: key\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <UserEntry>\r\n                <Tabs defaultActiveKey=\"followed_user\" onChange={this.onFollowTabs}>\r\n                    <TabPane tab=\"关注\" key=\"followed_user\">\r\n                        <UserFollowList data={this.state.followedData} />\r\n                    </TabPane>\r\n                    <TabPane tab=\"粉丝\" key=\"user_followed\">\r\n                        <UserFollowList data={this.state.followingData} />\r\n                    </TabPane>\r\n                </Tabs>\r\n            </UserEntry>\r\n        )\r\n    }\r\n}\r\n\r\nfunction UserFollowList(props) {\r\n    const { data } = props\r\n    return (\r\n        <List\r\n            itemLayout=\"horizontal\"\r\n            dataSource={data}\r\n            renderItem={item => (\r\n                <List.Item >\r\n                    <List.Item.Meta\r\n                        avatar={<UserAvatar id={item.id} avatar={item.avatar} />}\r\n                        title={item.name}\r\n                        description={item.signture && item.signture.length > 0 ? item.signture : \"这个用户很懒...\"}\r\n                    />\r\n                    <div style={{display:\"flex\", justifyContent: \"end\"}}>\r\n                        <p style={{paddingRight: \"1rem\"}}>关注: {item.followed_user_num}</p>\r\n                        <p style={{paddingRight: \"1rem\"}}>粉丝: {item.user_followed_num}</p>\r\n                    </div>\r\n                </List.Item>\r\n            )}\r\n        />\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport UserCenter  from './center'\r\nimport Article from '../assembly/article/article'\r\n\r\nexport default class ArticleEntry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user_id: props.match.params.id,\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <UserCenter>\r\n                <div>\r\n                    <Article key={this.state.createArticle} type=\"user\" user_id={this.state.user_id}/>\r\n                </div>\r\n            </UserCenter>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { List, Icon, Input, Button } from 'antd';\r\nimport UserAvatar from '../user/userAvatar'\r\nimport moment from 'moment';\r\nimport RequestUtil from '../../../util/request'\r\nmoment.locale('zh-cn')\r\n\r\nexport default class Replies extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            start: 1,\r\n            limit: 10,\r\n            data: [],\r\n            total: 0,\r\n            comment_id: props.comment_id,\r\n            comment_user: props.comment_user,\r\n            article_comment_reply_content: \"\",\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getCommentReplies(this.state.start, this.state.comment_id)\r\n    }\r\n\r\n    getCommentReplies = (start, comment_id) => {\r\n        RequestUtil.GET(\"/api/community/reply/list\", {\r\n            id: comment_id,\r\n            start: start,\r\n            limit: this.state.limit,\r\n        })\r\n        .then(res => {\r\n            if (res.code === 0) {\r\n                this.setState({\r\n                    data: res.data.data,\r\n                    total: res.data.total\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    onCommentReplyPageChange = (page) => {\r\n        this.getCommentReplies(page, this.state.comment_id)\r\n        this.setState({\r\n            start: page\r\n        })\r\n    }\r\n\r\n    onArticleCommentReplyClick = () => {\r\n        RequestUtil.POST(\"/api/community/create/commentReply\", {\r\n            comment_user: this.state.comment_user,\r\n            content: this.state.article_comment_reply_content,\r\n            object_id: this.state.comment_id,\r\n        })\r\n        .then(res => {\r\n            if (res.code === 0) {\r\n                this.getCommentReplies(this.state.start, this.state.comment_id)\r\n            }\r\n        })\r\n    }\r\n\r\n    onArticleCommentReplyChange = (e) => {\r\n        let value = e.target\r\n        this.setState({\r\n            article_comment_reply_content: value.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"comment-reply-list\">\r\n                <List\r\n                    bordered={true}\r\n                    itemLayout=\"vertical\"\r\n                    size=\"large\"\r\n                    pagination={{\r\n                        onChange: this.onCommentReplyPageChange,\r\n                        total: this.state.total\r\n                    }}\r\n                    dataSource={this.state.data}\r\n                    header={<div style={{display:\"flex\", justifyContent:\"space-between\"}}><div>共有{this.state.total}人评论</div><div><Icon type=\"swap\"/>切换排序</div></div>}\r\n                    footer={\r\n                        <div style={{display:\"flex\", justifyContent:\"space-between\"}}>\r\n                            <Input onChange={this.onArticleCommentReplyChange} style={{width: \"100%\"}} addonAfter={<Icon type=\"smile\" />} />\r\n                            <Button onClick={this.onArticleCommentReplyClick}>评论</Button>\r\n                        </div>\r\n                    }\r\n                    renderItem={item => (\r\n                        <List.Item key={item.id}>\r\n                            <div style={{width:\"100%\"}}>\r\n                                <div style={{display:\"flex\"}}>\r\n                                    <div style={{display:\"flex\"}}>\r\n                                        <UserAvatar id={item.to_user} avatar={item.to_user_avatar} />\r\n                                    </div>\r\n                                    <div style={{paddingLeft:\"1rem\", paddingRight:\"1rem\"}}>\r\n                                        <Icon type=\"swap\" />\r\n                                    </div>\r\n                                    <div style={{display:\"flex\"}}>\r\n                                        <UserAvatar id={item.user} avatar={item.user_avatar} />\r\n                                    </div>\r\n                                </div>\r\n                                <div style={{paddingLeft: \"3rem\", paddingBottom: \"1rem\", paddingTop:\"1rem\"}}>\r\n                                    {item.content}\r\n                                </div>\r\n                                <div style={{display:\"flex\", justifyContent:\"space-between\"}}>\r\n                                    <div>\r\n                                        {/* <span style={{paddingRight:\"1rem\"}}>\r\n                                            <Icon \r\n                                                type=\"like-o\" \r\n                                                style={{ marginRight: 8, color: item.like_status >= 0 ? \"red\" : \"\" }} \r\n                                            />\r\n                                            {item.like_users_num}\r\n                                        </span> */}\r\n                                        {/* <span style={{paddingRight:\"1rem\"}}>\r\n                                            <Icon type=\"message\" style={{ marginRight: 8 }} />\r\n                                            {2}\r\n                                        </span> */}\r\n                                    </div>\r\n                                    <div>\r\n                                        {moment.unix(item.create_time).fromNow()}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { List, Icon, Input, Button } from 'antd';\r\nimport UserAvatar from '../user/userAvatar'\r\nimport moment from 'moment';\r\nimport RequestUtil from '../../../util/request'\r\nimport Replies from './reply'\r\nmoment.locale('zh-cn')\r\n\r\nexport default class Comments extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            start: 1,\r\n            limit: 10,\r\n            data: [],\r\n            total: 0,\r\n            article_id: props.object_id,\r\n            comment_num: 0,\r\n            replyNum: 0,\r\n            commentListStatus: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getComments(this.state.start, this.state.article_id)\r\n    }\r\n\r\n    getComments = (start, article_id) => {\r\n        RequestUtil.GET(\"/api/community/comment/list\", {\r\n            kind: \"article_comment\",\r\n            object_id: article_id,\r\n            start: start,\r\n            limit: this.state.limit,\r\n        })\r\n        .then(res => {\r\n            if (res.code === 0) {\r\n                this.setState({\r\n                    data: res.data.data,\r\n                    total: res.data.total\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    onCommentPageChange = (page) => {\r\n        this.getComments(page, this.state.article_id)\r\n        this.setState({\r\n            start: page\r\n        })\r\n    }\r\n\r\n    onArticleCommentClick = () => {\r\n        RequestUtil.POST(\"/api/community/create/comment\", {\r\n            kind: \"article_comment\",\r\n            content: this.state.article_comment_content,\r\n            object_id: this.state.article_id,\r\n        })\r\n        .then(res => {\r\n            if (res.code === 0) {\r\n                this.getComments(this.state.start, this.state.article_id)\r\n                //this.props.setCommentNum(res.data.comment_num, this.props.index)\r\n            }\r\n        })\r\n    }\r\n\r\n    onArticleCommentChange = (e) => {\r\n        let value = e.target\r\n        this.setState({\r\n            article_comment_content: value.value\r\n        })\r\n    }\r\n\r\n    onClickCommentIcon = (index) => {\r\n        let commentListStatus = this.state.commentListStatus\r\n        let pos = commentListStatus.indexOf(index)\r\n        if (pos >= 0) {\r\n            commentListStatus.splice(pos, 1)\r\n        } else {\r\n            commentListStatus.push(index)\r\n        }\r\n        this.setState({\r\n            commentListStatus: commentListStatus\r\n        })\r\n    }\r\n\r\n    onClickCommentAction = (id, status, index) => {\r\n        RequestUtil.POST(`/api/community/option/${id}`, {\r\n            kind: \"comment\",\r\n            option: status >= 0 ? -1 : 1\r\n        })\r\n        .then(res => {\r\n            if (res.code === 0) {\r\n                let list = this.state.list\r\n                list[index].like_users_num = res.data.num\r\n                list[index].like_status = res.data.status\r\n                this.setState({\r\n                    list: list\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"comment-list\">\r\n                <List\r\n                    bordered={true}\r\n                    itemLayout=\"vertical\"\r\n                    size=\"large\"\r\n                    pagination={{\r\n                        onChange: this.onCommentPageChange,\r\n                        total: this.state.total\r\n                    }}\r\n                    dataSource={this.state.data}\r\n                    header={<div style={{display:\"flex\", justifyContent:\"space-between\"}}><div>共有{this.state.total}人评论</div><div><Icon type=\"swap\"/>切换排序</div></div>}\r\n                    footer={\r\n                        <div style={{display:\"flex\", justifyContent:\"space-between\"}}>\r\n                            <Input onChange={this.onArticleCommentChange} style={{width: \"100%\"}} addonAfter={<Icon type=\"smile\" />} />\r\n                            <Button onClick={this.onArticleCommentClick}>评论</Button>\r\n                        </div>\r\n                    }\r\n                    renderItem={(item, index) => (\r\n                        <List.Item key={item.id}>\r\n                            <div style={{width:\"100%\"}}>\r\n                                <div style={{display:\"flex\"}}>\r\n                                    <div style={{display:\"flex\"}}>\r\n                                        <UserAvatar id={item.create_user} avatar={item.create_user_avatar} />\r\n                                    </div>\r\n                                    <div style={{paddingLeft: \"1rem\"}}>\r\n                                        {item.create_user_name}\r\n                                    </div>\r\n                                </div>\r\n                                <div style={{paddingTop: \"1rem\", textIndent:\"2rem\"}}>{item.content}</div>\r\n                                <div style={{display:\"flex\", justifyContent:\"space-between\"}}>\r\n                                    <div style={{paddingTop:\"1rem\"}}>\r\n                                        {/* <span style={{paddingRight:\"1rem\"}}>\r\n                                            <Icon \r\n                                                onClick={this.onClickCommentAction.bind(this, item.id, item.like_status, index)}\r\n                                                type=\"like-o\" \r\n                                                style={{ marginRight: 8, color: item.like_status >= 0 ? \"red\" : \"\" }} \r\n                                            />\r\n                                            {item.like_num}\r\n                                        </span> */}\r\n                                        <span onClick={this.onClickCommentIcon.bind(this, index)} style={{paddingRight:\"1rem\"}}>\r\n                                            <Icon type=\"message\" style={{ marginRight: 8 }} />\r\n                                            <span>{this.state.commentListStatus.indexOf(index) >= 0 ? \"收起评论\" : \"查看评论\"}</span>\r\n                                        </span>\r\n                                    </div>\r\n                                    <div>\r\n                                        {moment.unix(item.create_time).fromNow()}\r\n                                    </div>\r\n                                </div>\r\n                                {this.state.commentListStatus.indexOf(index) >= 0 ? <div style={{paddingTop:\"1rem\"}}><Replies comment_id={item.id} comment_user={item.create_user} index={index}/></div> : null}\r\n                            </div>\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Row, Col, Card, Typography, Button, Tag } from 'antd';\r\nimport RequestUtil from '../../util/request'\r\nimport { ListContent, TagContent } from '../common'\r\nimport UserAvatar from '../assembly/user/userAvatar'\r\nimport moment from 'moment'\r\nimport { Link } from 'react-router-dom';\r\nimport Comment from '../assembly/article/comment'\r\nimport wechat from '../../static/wechat.jpg'\r\n\r\nexport default class ArticleDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: props.match.params.id,\r\n            sameArticleData: [],\r\n            tagData: [],\r\n            detailData: {}\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        RequestUtil.GET(\"/api/article/type\", {\r\n            start: 1,\r\n            limit: 5,\r\n            type: \"same\",\r\n            id: this.state.id,\r\n        })\r\n        .then(res => {\r\n            this.setState({\r\n                sameArticleData: res.data.data\r\n            })\r\n        })\r\n        RequestUtil.GET(\"/api/article/tags\")\r\n        .then(res => {\r\n            this.setState({\r\n                tagData: res.data\r\n            })\r\n        })\r\n        RequestUtil.GET(`/api/article/detail/${this.state.id}`,)\r\n        .then(res => {\r\n            if (res.code === 0) {\r\n                this.setState({\r\n                    detailData: res.data\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    onClickLike = () => {\r\n        RequestUtil.POST(`/api/community/option/${this.state.id}`, {\r\n            kind: \"article\",\r\n            type: \"like\",\r\n            option: this.state.detailData.like_status >= 0 ? -1 : 1,\r\n        })\r\n        .then(res => {\r\n            if (res.code === 0) {\r\n                let detailData = this.state.detailData\r\n                detailData.like_users_num = res.data.num\r\n                detailData.like_status = res.data.status\r\n                this.setState({\r\n                    detailData\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const data = this.state.detailData\r\n        return (\r\n            <Row>\r\n                <Col span={17}>\r\n                    <div style={{paddingTop: \"1rem\"}}>\r\n                        <Card>\r\n                            <Typography>\r\n                                <Typography.Title level={2}><p style={{color: \"black\"}}>{data.title}</p></Typography.Title>\r\n                                <Typography.Text>\r\n                                <div style={{display: \"flex\"}}>\r\n                                    <UserAvatar key={data.title} id={data.create_user} avatar={data.create_user_avatar} />\r\n                                    <p style={{paddingLeft: \"1rem\"}}>发布时间: {moment.unix(data.create_time).fromNow()}</p>\r\n                                    \r\n                                    <p style={{paddingLeft: \"1rem\"}}>浏览量: {data.read_num}</p>\r\n                                </div>\r\n                                </Typography.Text>\r\n                                <div style={{display: \"flex\"}}>\r\n                                    {data.tags ? data.tags.map((item, index) => {\r\n                                        return <Tag key={index}><Link to={{pathname: \"/article/all\", query: {name: \"全部文章\"}}}>{item}</Link></Tag>\r\n                                    }) : null}\r\n                                </div>\r\n                                <Card bordered={false}>\r\n                                    <Card.Meta description={<div><p style={{color: \"black\"}}>摘要: </p>{data.description}</div>}/>\r\n                                </Card>\r\n                                <Card>\r\n                                    <div dangerouslySetInnerHTML={{__html: data.content}} />\r\n                                    <div style={{display: \"flex\", justifyContent: \"flex-end\", paddingTop: \"1rem\"}}>\r\n                                        <div><p style={{paddingLeft: \"1rem\"}}>更新时间: {moment.unix(data.update_time).fromNow()}</p></div>\r\n                                        <div><p style={{paddingLeft: \"1rem\"}}>作者: {data.create_user_name}</p></div>\r\n                                    </div>\r\n                                    \r\n                                </Card>\r\n                            </Typography>\r\n                            <Card>\r\n                                <div style={{display: \"flex\", justifyContent: \"center\" }}>\r\n                                    <div>\r\n                                        <img alt=\"wechat\" src={wechat}/>\r\n                                        <div>扫描关注微信公众号，第一时间获取博客更新动态</div>\r\n                                    </div>\r\n                                </div>\r\n                            </Card>\r\n                            <div style={{display: \"flex\", justifyContent: \"center\", paddingTop: \"1rem\"}}>\r\n                            <Button style={{color: data.like_status >= 0 ? \"red\": \"green\"}} onClick={this.onClickLike}>点赞一下吧~({data.like_users_num})</Button>\r\n                            </div>\r\n                        </Card>\r\n                    </div>\r\n                    <div style={{paddingTop: \"1rem\"}}>\r\n                        <Card>\r\n                            <p>评论</p>\r\n                            <Comment object_id={this.state.id} />\r\n                        </Card>\r\n                    </div>\r\n                </Col>\r\n                <Col span={7}>\r\n                    <div style={{paddingLeft: \"1rem\", paddingTop: \"1rem\"}}>\r\n                        <ListContent title=\"猜你喜欢\" data={this.state.sameArticleData} linkPath=\"/article/all\" />\r\n                    </div>\r\n                    <div style={{paddingLeft: \"1rem\", paddingTop: \"1rem\"}}>\r\n                        <TagContent title=\"标签\" data={this.state.tagData} />\r\n                    </div>\r\n                    \r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport {Comment, Avatar, Form, Button, Popover, Input, Card, Modal } from 'antd';\r\nimport RequestUtil from '../../../util/request'\r\nimport moment from 'moment';\r\n\r\nexport default class Message extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            // 分页\r\n            start: 1,\r\n            limit: 10,\r\n            total: 0,\r\n            data: [],\r\n            messagerAvatar: \"http://jxhx2.yangqq.com/e/tool/images/tx1.jpg\",\r\n            messagerName: \"游客\",\r\n            submitting: false,\r\n            content: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getLeaveMessageList(this.state.start, this.state.limit)\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n          content: e.target.value,\r\n        });\r\n    }\r\n\r\n    onClickSelectAvatar = (index) => {\r\n        this.setState({\r\n            messagerAvatar: defaultAvatar[index].src\r\n        })\r\n    }\r\n\r\n    getLeaveMessageList = (start, limit) => {\r\n        RequestUtil.GET(\"/api/leaveMessage/list\", {\r\n            start: start,\r\n            limit: limit\r\n        })\r\n        .then(res => {\r\n            this.setState({\r\n                data: res.data.data,\r\n                total: res.data.total\r\n            })\r\n        })\r\n    }\r\n\r\n    onClickLeaveMessageButton = () => {\r\n        if (!this.state.content) {\r\n            return;\r\n        }\r\n      \r\n        this.setState({\r\n            submitting: true,\r\n        });\r\n\r\n        RequestUtil.POST(\"/api/leaveMessage/create/leaveMessage\", {\r\n            content: this.state.content,\r\n            create_user_avatar: this.state.messagerAvatar,\r\n            create_user_name: this.state.messagerName,\r\n        })\r\n        .then(res => {\r\n            if (res.code === 0) {\r\n                this.setState({\r\n                    submitting: false,\r\n                    content: '',\r\n                });\r\n                this.getLeaveMessageList(this.state.start, this.state.limit)\r\n                this.setState({\r\n                    visible: false\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    commentLeaveMessage = (messageId) => {\r\n        if (!this.state.content) {\r\n            return;\r\n        }\r\n      \r\n        this.setState({\r\n            submitting: true,\r\n        });\r\n\r\n        RequestUtil.POST(\"/api/leaveMessage/comment\", {\r\n            content: this.state.content,\r\n            create_user_avatar: this.state.messagerAvatar,\r\n            create_user_name: this.state.messagerName,\r\n            message_id: messageId,\r\n        })\r\n        .then(res => {\r\n            if (res.code === 0) {\r\n                this.setState({\r\n                    submitting: false,\r\n                    content: '',\r\n                });\r\n                this.getLeaveMessageList(this.state.start, this.state.limit)\r\n                this.setState({\r\n                    visible: false\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    onClickReply = (id) => {\r\n        this.setState({\r\n            visible: !this.state.visible\r\n        })\r\n        this.commentLeaveMessage(id)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <LeaveMessageEntry \r\n                        messagerAvatar={this.state.messagerAvatar}\r\n                        onClickSelectAvatar={this.onClickSelectAvatar}\r\n                        handleChange={this.handleChange}\r\n                        onClickLeaveMessageButton={this.onClickLeaveMessageButton}\r\n                        submitting={this.state.submitting}\r\n                        content={this.state.content}\r\n                    />\r\n\r\n                    <Card>\r\n                        {this.state.data.map((item, index) => {\r\n                            return (\r\n                                <LeaveMessage item={item} key={index} onClickReply={this.onClickReply} >\r\n                                    {item.comments.map((entry, num) => {\r\n                                        return <LeaveMessage item={entry} key={num} onClickReply={this.onClickReply} />\r\n                                    })}\r\n                                </LeaveMessage>\r\n                            )\r\n                        })}\r\n                    </Card>\r\n                    \r\n                    <Modal\r\n                        title=\"Modal\"\r\n                        visible={this.state.visible}\r\n                        onCancel={this.onClickReply}\r\n                        footer={null}\r\n                        closable={true}\r\n                    >\r\n                        <LeaveMessageEntry \r\n                            messagerAvatar={this.state.messagerAvatar}\r\n                            onClickSelectAvatar={this.onClickSelectAvatar}\r\n                            handleChange={this.handleChange}\r\n                            onClickLeaveMessageButton={this.commentLeaveMessage}\r\n                            submitting={this.state.submitting}\r\n                            content={this.state.content}\r\n                        />\r\n                    </Modal>\r\n            </div>\r\n            \r\n        )\r\n    } \r\n}\r\n\r\nconst LeaveMessage = ({children, item, onClickReply, id}) => (\r\n    <Comment\r\n        //actions={[<span onClick={onClickReply.bind(this, id)}>回复</span>]}\r\n        author={<p>{item.create_user_name}</p>}\r\n        avatar={(\r\n            <Avatar\r\n                src={item.create_user_avatar}\r\n                alt={item.create_user_name}\r\n            />\r\n        )}\r\n        //datetime={moment.unix(item.create_time).fromNow()}\r\n        datetime={moment.unix(item.create_time).calendar()}\r\n        content={<p>{item.content}</p>}\r\n    >\r\n        {children}\r\n    </Comment>\r\n);\r\n\r\nfunction LeaveMessageEntry(props) {\r\n    const { messagerAvatar, onClickSelectAvatar, handleChange, onClickLeaveMessageButton, submitting, content } = props\r\n    return (   \r\n        <Card>\r\n            <Comment\r\n                avatar={(\r\n                    <div>\r\n                        <div style={{display:\"flex\", justifyContent:\"center\", paddingTop:\"1rem\"}}>\r\n                            <Avatar\r\n                                src={messagerAvatar}\r\n                                alt=\"visitor\"\r\n                            />\r\n                        </div>\r\n                        <div style={{paddingTop: \"1rem\"}}>\r\n                            <Popover \r\n                                placement=\"bottom\" \r\n                                content={\r\n                                    <Card>\r\n                                        {defaultAvatar.map((item, index) => {\r\n                                            return (\r\n                                                <Card.Grid \r\n                                                    onClick={onClickSelectAvatar.bind(this, index)}\r\n                                                    key= {index} \r\n                                                    style={{width:\"25%\", textAlign: 'center'}}\r\n                                                >\r\n                                                    <img alt={item.alt} src={item.src}/>\r\n                                                </Card.Grid>\r\n                                            )\r\n                                        })}\r\n                                    </Card>\r\n                                } \r\n                                trigger=\"click\">\r\n                                <Button>选择头像</Button>\r\n                            </Popover>\r\n                        </div>\r\n                    </div>               \r\n                )}\r\n                content={(\r\n                    <Editor\r\n                        onChange={handleChange}\r\n                        onSubmit={onClickLeaveMessageButton}\r\n                        submitting={submitting}\r\n                        value={content}\r\n                    />\r\n                )}\r\n            />\r\n        </Card> \r\n    )\r\n}\r\n\r\nconst TextArea = Input.TextArea;\r\n\r\nconst Editor = ({\r\n    onChange, onSubmit, submitting, value,\r\n  }) => (\r\n    <div>\r\n        <Form.Item>\r\n            <TextArea rows={4} onChange={onChange} value={value} />\r\n        </Form.Item>\r\n        <Form.Item>\r\n            <div style={{display:\"flex\", justifyContent: \"flex-end\"}}>\r\n                <Button\r\n                    htmlType=\"submit\"\r\n                    loading={submitting}\r\n                    onClick={onSubmit}\r\n                    type=\"primary\"\r\n                >\r\n                    留言\r\n                </Button>\r\n            </div>\r\n      </Form.Item>\r\n    </div>\r\n);\r\n\r\nconst defaultAvatar = [\r\n    {\r\n        alt: \"default1\",\r\n        src: \"http://jxhx2.yangqq.com/e/tool/images/tx1.jpg\"\r\n    }\r\n    ,{\r\n        alt: \"default2\",\r\n        src: \"http://jxhx2.yangqq.com/e/tool/images/tx2.jpg\"\r\n    }\r\n    ,{\r\n        alt: \"default3\",\r\n        src: \"http://jxhx2.yangqq.com/e/tool/images/tx3.jpg\"\r\n    }\r\n    ,{\r\n        alt: \"default4\",\r\n        src: \"http://jxhx2.yangqq.com/e/tool/images/tx4.jpg\"\r\n    }\r\n    ,{\r\n        alt: \"default5\",\r\n        src: \"http://jxhx2.yangqq.com/e/tool/images/tx5.jpg\"\r\n    }\r\n    ,{\r\n        alt: \"default6\",\r\n        src: \"http://jxhx2.yangqq.com/e/tool/images/tx6.jpg\"\r\n    }\r\n    ,{\r\n        alt: \"default7\",\r\n        src: \"http://jxhx2.yangqq.com/e/tool/images/tx7.jpg\"\r\n    }\r\n    ,{\r\n        alt: \"default8\",\r\n        src: \"http://jxhx2.yangqq.com/e/tool/images/tx8.jpg\"\r\n    }\r\n]","import React, { Component } from 'react';\r\nimport { Button, Modal, Form, Input } from 'antd';\r\nimport RequestUtil from '../../../util/request'\r\n  \r\nconst LoginForm = Form.create({ name: 'modal' })(\r\n    class extends Component {\r\n        render() {\r\n            const {\r\n            visible, onCancel, onCreate, form,\r\n            } = this.props;\r\n            const { getFieldDecorator } = form;\r\n            return (\r\n                <Modal\r\n                    visible={visible}\r\n                    title={<p style={{color:\"black\"}}>加入我们</p>}\r\n                    okText=\"登录\"\r\n                    onCancel={onCancel}\r\n                    onOk={onCreate}\r\n                >\r\n                    <Form layout=\"vertical\" style={{color: \"black\"}}>\r\n                        <Form.Item label={<p style={{color: \"black\"}}>账号</p>}>\r\n                            {getFieldDecorator('account', {\r\n                            rules: [{ required: true, message: '请输入账号' }],\r\n                            })(\r\n                                <Input />\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item label={<p style={{color: \"black\"}}>密码</p>}>\r\n                            {getFieldDecorator('password', {\r\n                            rules: [{ required: true, message: '请输入密码' }],\r\n                            })(\r\n                                <Input type=\"password\"/>\r\n                            )}\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>\r\n            );\r\n        }\r\n    }\r\n);\r\n  \r\n// \r\nexport default class UserLogin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visible: false,\r\n            isLogin: props.loginStatus,\r\n            userInfo: {}\r\n        }\r\n    }\r\n  \r\n    showModal = () => {\r\n        this.setState({ visible: true });\r\n    }\r\n  \r\n    handleCancel = () => {\r\n        this.setState({ visible: false });\r\n    }\r\n  \r\n    handleCreate = () => {\r\n        const form = this.formRef.props.form;\r\n        form.validateFields((err, values) => {\r\n            if (err) {\r\n            return;\r\n            }\r\n    \r\n            this.login(values.account, values.password)\r\n            form.resetFields();\r\n            this.setState({ visible: false });\r\n        });\r\n    }\r\n  \r\n    saveFormRef = (formRef) => {\r\n        this.formRef = formRef;\r\n    }\r\n\r\n    login = (account, password) => {\r\n        RequestUtil.POST(\"/api/user/login\", {\r\n            account: account,\r\n            password: password,\r\n        })\r\n        .then(res => {\r\n            if (res.code === 0 && res.token) {\r\n                localStorage.setItem('user_token', res.token);\r\n                localStorage.setItem('id', res.data.id);\r\n                this.setState({\r\n                    userInfo: res.data\r\n                }, () => {\r\n                    window.location.reload()\r\n                })\r\n                this.props.getUserLoginStatus({userInfo: res.data})\r\n            }\r\n        })\r\n    }\r\n  \r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button type=\"primary\" onClick={this.showModal}>登录</Button>\r\n                <LoginForm\r\n                    wrappedComponentRef={this.saveFormRef}\r\n                    visible={this.state.visible}\r\n                    onCancel={this.handleCancel}\r\n                    onCreate={this.handleCreate}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Badge, Dropdown, Icon, List, Button } from 'antd'\r\nimport RequestUtil from '../../../util/request'\r\nimport UserAvatar from '../user/userAvatar'\r\nimport UserLogin from './Signin'\r\nimport moment from 'moment';\r\nmoment.locale('zh-cn')\r\n\r\nexport default class UserInfo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLogin: false,\r\n            userInfo: null,\r\n            userMessage: [],\r\n            userMessageTotal: 0\r\n        }\r\n    }\r\n\r\n    handleAvatarClick = () => {\r\n        alert(\"user center\")\r\n    }\r\n\r\n    handleMessageClick = () => {\r\n        \r\n    }\r\n\r\n    getUserLoginStatus = (res) => {\r\n        this.setState({\r\n            isLogin: true,\r\n            userInfo: res.userInfo\r\n        })\r\n    }\r\n\r\n    handleUserMenuClick = (value) => {\r\n        switch (value.key) {\r\n            case \"userCenter\":{\r\n                break\r\n            }\r\n            case \"logout\": {\r\n                this.setState({\r\n                    isLogin: false,\r\n                    userInfo: null\r\n                })\r\n                localStorage.removeItem(\"user_token\")\r\n                break\r\n            }\r\n            default: {\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    handleUserLogout = () => {\r\n        this.setState({\r\n            isLogin: false,\r\n            userInfo: null\r\n        })\r\n        localStorage.removeItem(\"user_token\")\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getUserInfo()\r\n        this.getUserMessageList()\r\n    }\r\n\r\n    getUserMessageList = () => {\r\n        RequestUtil.GET(\"/api/message/list\")\r\n        .then(res => {\r\n            if (res.code === 0) {\r\n                this.setState({\r\n                    userMessage: res.data.data,\r\n                    userMessageTotal: res.data.total,\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    getUserInfo = () => {\r\n        RequestUtil.GET(`/api/user/info`)\r\n        .then(res => {\r\n            if (res.code === 0) {\r\n                this.setState({\r\n                    userInfo: res.data,\r\n                    isLogin: true\r\n                })\r\n            }\r\n            \r\n        })\r\n    }\r\n\r\n    handleMessageRead = (value) => {\r\n        RequestUtil.PUT(`/api/message/read/${value}`)\r\n        .then(res => {\r\n            if (res.code === 0) {\r\n                this.getUserMessageList()\r\n            }\r\n        })\r\n    }\r\n\r\n    onUserMessageMouseEnter = () => {\r\n        this.getUserMessageList()\r\n    }\r\n\r\n    onReadAllButtonClick = () => {\r\n        RequestUtil.PUT(\"/api/message/readall\")\r\n        .then(res => {\r\n            if (res.code === 0) {\r\n                this.getUserMessageList()\r\n            }\r\n        })\r\n    }\r\n\r\n    setLoginStatus = (status) => {\r\n        this.setState({\r\n            isLogin: status\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let userMessageDropDownItem = \r\n        <div style={{\"background\":\"white\"}}>\r\n            <List \r\n                bordered={true} \r\n                size=\"small\" \r\n                itemLayout=\"horizontal\" \r\n                dataSource={this.state.userMessage} \r\n                header={<div style={{display:\"flex\", justifyContent:\"space-around\"}}><div style={{textAlign:\"center\"}}></div><Button onClick={this.onReadAllButtonClick}>全部已读</Button></div>}\r\n                renderItem={item => (\r\n                <List.Item \r\n                    key={item.id} \r\n                    actions={[<Button onClick={this.handleMessageRead.bind(this, item.id)}>知道了</Button>]}\r\n                >\r\n                    <div>\r\n                    <List.Item.Meta \r\n                        className=\"userCenter\" \r\n                        avatar={<UserAvatar id={item.from_user_id} avatar={item.from_user_avatar} placement=\"left\"/>}\r\n                        //avatar={<Avatar src={item.from_user_avatar}/>} \r\n                        title={item.title} \r\n                        description={<p onClick={this.handleMessageRead.bind(this, item.id)} dangerouslySetInnerHTML={{ __html: item.content }}  />}\r\n                    />\r\n                    <div style={{display:\"flex\", justifyContent:\"end\"}}><p>{moment.unix(item.time).format(\"YY-MM-DD HH:mm:ss\")}</p></div>\r\n                    </div>\r\n                    \r\n                </List.Item>\r\n            )}/>  \r\n        </div>  \r\n        return (\r\n            <div style={{display:\"flex\", justifyContent:\"flex-end\"}}>\r\n                <div>\r\n                    <Icon type=\"search\" theme=\"outlined\"  style={{fontSize: 18, paddingRight:\"20px\"}}/>\r\n                </div>\r\n                <div>\r\n                    <Dropdown overlay={userMessageDropDownItem} trigger={['click', \"hover\"]}>\r\n                        <Badge count={this.state.userMessageTotal}>\r\n                            <Icon type=\"bell\" theme=\"outlined\"  onMouseEnter={this.onUserMessageMouseEnter} style={{fontSize: 18}}/>      \r\n                        </Badge>\r\n                    </Dropdown>\r\n                </div>\r\n                <div style={{paddingLeft:\"1rem\"}}>\r\n                    {   \r\n                        this.state.isLogin ?\r\n                            <UserAvatar id={this.state.userInfo.id} avatar={this.state.userInfo.avatar} type=\"self\" getUserLoginStatus={this.getUserLoginStatus}/>\r\n                        :\r\n                            <UserLogin isLogin={this.state.isLogin} getUserLoginStatus={this.getUserLoginStatus}/>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Empty } from 'antd';\r\n\r\nexport default class ErrorPage extends Component {\r\n    render() {\r\n        return (\r\n            <Empty\r\n                image=\"https://gw.alipayobjects.com/mdn/miniapp_social/afts/img/A*pevERLJC9v0AAAAAAAAAAABjAQAAAQ/original\"\r\n                imageStyle={{\r\n                width: \"100%\",\r\n                height: \"auto\"\r\n                }}\r\n                description={\r\n                <span>\r\n                    页面跑去火星啦~！\r\n                    <Link to={{pathname: \"/\", query: {name: \"主页\"}}}>点我返回主页</Link>\r\n                </span>\r\n                }\r\n            >\r\n            </Empty>\r\n        )\r\n    }\r\n}","import { Layout, Affix, BackTop, Row, Col, Menu, Breadcrumb, Card } from 'antd';\r\nimport React, { Component } from 'react';\r\nimport './index.less'\r\nimport { Route, Switch, Link, withRouter, Redirect } from 'react-router-dom';\r\nimport Home from '../home/home'\r\nimport Article from '../article/article'\r\nimport UserCenter from '../user/center'\r\nimport UserFollow from '../user/userFollowList'\r\nimport ArticleEntry from '../user/article'\r\nimport ArticleDetail from '../article/articleDetail'\r\nimport Message from '../assembly/message/message'\r\nimport logo from '../../static/monsterlogo.png'\r\nimport UserInfo from '../assembly/user/userInfo'\r\nimport ErrorPage from './error'\r\n\r\n\r\nconst { Header, Content, Footer } = Layout;\r\n\r\nexport default class Index extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLogin: false,\r\n        }\r\n    }\r\n\r\n    setLoginStatus = (status) => {\r\n        this.setState({\r\n            isLogin: status\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const HomeEntry = withRouter((props) => {\r\n            const { location } = props\r\n            const pathSnippets = location.pathname.split('/').filter(i => i);\r\n            let breadcrumbItems = []\r\n            breadcrumbItems.push(\r\n                <Breadcrumb.Item key={1}>\r\n                    主页\r\n                </Breadcrumb.Item>\r\n            )\r\n            const extraBreadcrumbItems = pathSnippets.map((item, index) => {\r\n                let url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\r\n                let name = \"\"\r\n                if (item === \"article\" && url === \"/article\") {\r\n                    name = \"文章\"\r\n                } else if (item === \"hot\" && url === \"/article/hot\") {\r\n                    name = \"热门文章\"\r\n                } else if (item === \"new\" && url === \"/article/new\") {\r\n                    name = \"最新文章\"\r\n                } else if (item === \"recommend\" && url === \"/article/recommend\") {\r\n                    name = \"推荐文章\"\r\n                } else if (item === \"all\" && url === \"/article/all\") {\r\n                    name = \"全部文章\"\r\n                } else if (item === \"detail\" && url === \"/article/detail\") {\r\n                    name = location.query ? location.query.name : \"文章详情\"\r\n                } else if (item === \"message\" && url === \"/message\") {\r\n                    name = \"留言\"\r\n                } else if (item === \"center\" && url === \"/center\") {\r\n                    name = \"用户中心\"\r\n                } else if (item === \"article\" && url === \"/center/article\") {\r\n                    name = \"文章\"\r\n                } else if (item === \"follow\" && url === \"/center/follow\") {\r\n                    name = \"关注\"\r\n                }\r\n                return (\r\n                    <Breadcrumb.Item key={url}>\r\n                        {name}\r\n                    </Breadcrumb.Item>\r\n                );\r\n            });\r\n            breadcrumbItems = breadcrumbItems.concat(extraBreadcrumbItems)\r\n            return (\r\n                <Card>\r\n                    <Breadcrumb>\r\n                        {breadcrumbItems}\r\n                    </Breadcrumb>\r\n                </Card>\r\n                \r\n            )\r\n        })\r\n        return (\r\n                <Layout>\r\n                    <Row>\r\n                        <Col span={5}></Col>\r\n                        <Col span={14}>\r\n                        <Affix>\r\n                            <Header>\r\n                                <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n                                    <div style={{width: \"20%\"}}>\r\n                                        <Link to={{pathname: \"/\", query: {name: \"主页\"}}}><img alt=\"logo\" width=\"100%\" src={logo} /></Link>\r\n                                    </div>\r\n                                    <div>\r\n                                        <Menu mode=\"horizontal\" defaultSelectedKeys={['home']} style={{ lineHeight: '64px'}} >\r\n                                            <Menu.Item key=\"home\">\r\n                                                <Link to={{pathname: \"/\", query: {name: \"主页\"}}}>首页</Link>\r\n                                            </Menu.Item>\r\n                                            <Menu.Item key=\"article\">\r\n                                                <Link to={{pathname: \"/article\", query: {name: \"文章\"}}}>文章</Link>\r\n                                            </Menu.Item>\r\n                                            <Menu.Item key=\"message\">\r\n                                                <Link to={{pathname: \"/message\", query: {name: \"留言\"}}}>留言</Link>\r\n                                            </Menu.Item>\r\n                                        </Menu>\r\n                                    </div>\r\n                                    <div>\r\n                                        <UserInfo />\r\n                                    </div>\r\n                                </div>\r\n                            </Header>\r\n                        </Affix>\r\n                        <Content>\r\n                            <div style={{paddingTop: \"1rem\"}}>\r\n                                <HomeEntry />\r\n                            </div>\r\n                            \r\n                            <Switch>\r\n                                {/* 导航 */}\r\n                                <Route exact path=\"/\" component={ Home } />\r\n                                <Route exact path=\"/article\" component={ props => <Article {...props} articleType=\"hot\"/> } />\r\n                                <Route exact path=\"/message\" component={ Message } />\r\n                                {/* 文章 */}\r\n                                <Route exact path=\"/article/hot\" component={ props => <Article {...props} articleType=\"hot\"/> } />\r\n                                <Route exact path=\"/article/new\" component={ props => <Article {...props} articleType=\"new\"/> } />\r\n                                <Route exact path=\"/article/recommend\" component={ props => <Article {...props} articleType=\"recommend\"/> } />\r\n                                <Route exact path=\"/article/all\" component={ props => <Article {...props} articleType=\"all\"/> } />\r\n                                <Route exact path=\"/article/detail/:id\" component={ ArticleDetail } />\r\n                                {/* 用户中心 */}\r\n                                <Route exact path=\"/usercenter/:id\" component={ UserCenter } />\r\n                                <Route exact path=\"/center/user/:id\" component={ ArticleEntry } />\r\n                                <Route exact path=\"/center/article/:id\" component={ ArticleEntry } />\r\n                                <Route exact path=\"/center/follow/:id\" component={ UserFollow } />\r\n                                <Redirect exact strict from=\"/usercenter/:id\" to=\"/center/article/:id\" />\r\n                                {/* 错误页面 */}\r\n                                <Route component={ErrorPage} />\r\n                            </Switch>\r\n                            <BackTop />\r\n                        </Content>\r\n                        <Footer>\r\n                            <div style={{ textAlign: 'center' }}>\r\n                                <p>Copyright © 2019 RunnerMonster. All rights Reserved.</p>\r\n                            </div>    \r\n                        </Footer>  \r\n                        </Col>\r\n                        <Col span={5}></Col>\r\n                    </Row>\r\n                </Layout>\r\n        )\r\n    }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.less';\r\nimport Index from './blog/index/index'\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<Router><Index /></Router>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}